[tool.poetry]
name = "collatable"
version = "0.5.0"
description = "Constructing batched tensors for any machine learning tasks"
authors = ["altescy <altescy@fastmail.com>"]
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/altescy/collatable"
keywords = ["python", "machine learning"]
packages = [
    { include = "collatable" },
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
numpy = [
    {version=">=1.26.4", python=">=3.9,<4.0"},
    {version=">=1.0.0,<1.26.4", python=">=3.8,<3.9"},
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pysen = "^0.11.0"
black = "^24.8.0"
isort = "^5.13.2"
flake8 = "^5.0.4"
mypy = "^1.11.2"

[tool.poetry.group.lsp]
optional = true

[tool.poetry.group.lsp.dependencies]
python-lsp-server = { version="^1.0.0", extras=["flake8"] }
pylsp-mypy = "^0.6.9"
python-lsp-isort = "^0.2.0"
python-lsp-black = "^2.0.0"

[tool.pysen]
version = "0.11"

[tool.pysen-cli]
settings_dir = "."

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 120
py_version = "py38"

[[tool.pysen.lint.mypy_targets]]
  paths = ["."]

[tool.pysen.lint.source]
  includes = ["."]
  excludes = [".venv/"]


[tool.black] # automatically generated by pysen
# pysen ignores and overwrites any modifications
line-length = 120
target-version = ["py38"]

[tool.isort] # automatically generated by pysen
# pysen ignores and overwrites any modifications
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
line_length = 120
multi_line_output = 3
use_parentheses = true
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
